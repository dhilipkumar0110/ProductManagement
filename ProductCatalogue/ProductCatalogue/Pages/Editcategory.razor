@page "/Editcategory/{Id}"


@using ProductCatalogue.Data
@inject CategoryService editCategory
@inject NavigationManager NavigationManager

<h3>Edit Category</h3>

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="for-group">
                <label for="CategoryyName" class="control-label"><strong>Category Name</strong></label>
                <input form="CategoryyName" class="form-control" @bind="@categoryName" />
            </div>
            <br />
            <div class="for-group">
                <label for="Description" class="control-label"><strong>Category Description</strong></label>
                <input form="Description" class="form-control" @bind="@categoryDescription" />
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <br />
                <input type="button" class="btn btn-primary" @onclick="@UpdateCategory" value="Save" />

                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {

    [Parameter]
    public string Id{ get; set; }
    string categoryName = string.Empty;
    string categoryDescription = string.Empty;
    Category categoryObj = new Category();

    protected override async Task OnInitializedAsync()
    {
        categoryObj = await Task.Run(() => editCategory.GetCategoryByID(Convert.ToInt32(Id)));
        categoryName = categoryObj.CategoryName;
        categoryDescription = categoryObj.CategoryDescription;
    }
    protected async void UpdateCategory()
    {
        categoryObj.CategoryName = categoryName;
        categoryObj.CategoryDescription = categoryDescription;
        await editCategory.UpdateCategoryDetails(categoryObj);
        NavigationManager.NavigateTo("Categories");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Categories");
    }
}
